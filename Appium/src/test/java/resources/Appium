MATERIAL
Google --> appium GITHUB gestures
---------------------------------------------------------------------------------------------------------------------------------
APPIUM INSPECTOR
Desired Capabilities:
appium:app	--> C:\Users\Rajkamal\Downloads\Automation\Workplace\Appium\src\test\java\resources\ApiDemos-debug.apk
appium:deviceName --> DEmulator
platformName --> android
appium:automationName --> UiAutomator2
---------------------------------------------------------------------------------------------------------------------------------
APPIUM DRIVERS
cmd -> appium driver list
cmd -> appium driver install uiautomator2
To start server
cmd-> appium
---------------------------------------------------------------------------------------------------------------------------------
APPIUM DEPENDENCY COMPATIBILITY
1.  Node version minimum should be 16. you can check your version with below command

node -v
If it is less than 16, please upgrade

2.  This course is taught on latest Appium Server 2.0 version. If you use older Version 1.22, then you will run into issues.
You can check your appium version with below command
appium -v

If you have less than 2 version, use below steps to install correctly

npm uninstall -g appium
Delete  appium folder in node modules
npm install -g appium@next

3.  Appium Java client 8.0.0 has few bugs. So please select the  version Greater than 8.0.0 from mavenrepository.com. ( Always select latest available)

3. Do not include any Selenium dependencies as of now in your project, I will later show what packages needs to be installed once we move into framework lectures,

So, as of now,  Below is Latest perfect working ( Appium & TestNG ) Combination  which you can have in your POM.xml Project for smoother execution

<dependency>

<groupId>io.appium</groupId>

<artifactId>java-client</artifactId>

<version>8.1.1</version>

</dependency>

<!-- https://mvnrepository.com/artifact/org.testng/testng -->

<dependency>

<groupId>org.testng</groupId>

<artifactId>testng</artifactId>

<version>6.14.3</version>

</dependency>
---------------------------------------------------------------------------------------------------------------------------------
TO FIND APPIUM ACTIVITY
adb shell dympsys window | grep -E 'mCurrentFocus'  - MAC
adb shell dumpsys window | find "mCurrentFocus" - Windows

ref: https://support.testsigma.com/support/solutions/articles/32000019977-how-to-find-app-package-and-app-activity-of-your-android-app
---------------------------------------------------------------------------------------------------------------------------------
INSTALL APP INTO SIMULATOR
C:\Users\Rajkamal\AppData\Local\Android\Sdk\platform-tools>adb install C:\Users\Rajkamal\Downloads\Automation\Workplace\Appium\src\test\java\resources\General-Store.apk
---------------------------------------------------------------------------------------------------------------------------------
INSTALLING APPIUM iOS SETUP
1) Download Appium Server - Appium Desktop
2) Install XCode to compile App on suitable iPad/ iPhone
	- Download uicatlog app form github - find file with .xcodeproj
	- Download and install xcode from appstore
	- Double click on .xcodeproj file to compile app in xcode
	- ios app will be saved with .app extension
	- select the ios device which u want to compile
	- After successful compilation the user chosen ios simulator will open
3) Launch iPhone Simulator
4) Install xcuitest driver - appium install xcuitest
	- downgrade npm to 6 -> install xcuitest and revert the npm to 8
5) Create driver and base class for IOS - Start testcase design
---------------------------------------------------------------------------------------------------------------------------------
APPIUM INSPECTOR IOS
Desired Capabilities:
appium:app	--> C:\Users\Rajkamal\Downloads\Automation\Workplace\Appium\src\test\java\resources\appName.app
appium:deviceName --> iPhone 13 pro
platformName --> IOS
PlatformVersion --> 15.5
appium:automationName --> XCUITest
---------------------------------------------------------------------------------------------------------------------------------
ANDROID REALT DEVICE AUTOMATION
Developer options --> Enable USB Debugging, Enable -> Disable permission monitoring
---------------------------------------------------------------------------------------------------------------------------------
IOS REAL DEVICE AUTOMATION
install brew -> Go to terminal and enter below command
/usr/bin/ruby -e "$(curl -fsSL
https://raw.githubusercontent.com/Homebrew/install/master/install)"

install below softwares:
brew install libimobiledevice
brew install ios-deploy

Four new capabilities to run on real device:
d.setCapability("xcodeOrgid", "xxxx"); ->Team Id generated by Apple (sign to developer.apple.com/account)
d.setCapability("xcodeSigningId","iPhone Developer");
d.setCapability("udid", "xxxx"); -> get it from iTunes
d.setCapability("updateWDABundleId", "xxxxxx"); -> xcode

//Build the app u need to test in xcode to ur real device
---------------------------------------------------------------------------------------------------------------------------------
ISSUES:
1) Appium-Error: How to resolve "SessionNotCreatedException" || "Socket hang up" error on windows OS - Delete the emulator and create it again or cold reboot the device
2) java.lang.ExceptionInInitializerError (page factory) -> eclipse->windows->preference-> installed jres -> select java 11 jdk and apply
3) Permission Denial: starting Intent -> Use splash activity instead of main activity
---------------------------------------------------------------------------------------------------------------------------------
